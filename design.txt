Entities:

Book

Attributes: id, title, author_id, category_id, published_date, isbn, status (available/borrowed), summary.
Author

Attributes: id, name, birth_date, bio.
Category

Attributes: id, name, description.
Operations:

Books:

GET /books - List books with filters (e.g., by author, category, availability). Supports pagination.
GET /books/{id} - Retrieve book details by ID.
POST /books - Add a new book (admin-only).
PUT /books/{id} - Update book details (admin-only).
DELETE /books/{id} - Remove a book (admin-only).
Authors:

GET /authors - List authors with filters (e.g., by name). Supports pagination.
GET /authors/{id} - Retrieve author details by ID.
POST /authors - Add a new author (admin-only).
PUT /authors/{id} - Update author details (admin-only).
DELETE /authors/{id} - Remove an author (admin-only).
Categories:

GET /categories - List categories.
GET /categories/{id} - Retrieve category details by ID.
POST /categories - Add a new category (admin-only).
PUT /categories/{id} - Update category details (admin-only).
DELETE /categories/{id} - Remove a category (admin-only).
API Features:

Pagination: For GET endpoints that return collections, include page and size parameters.
Filters: For /books, allow filtering by author_id, category_id, status.
Caching: Cache responses for GET /books, GET /authors, GET /categories for 10 minutes.
Errors: Standardized error structure with meaningful messages and HTTP status codes (e.g., 404 for not found, 400 for validation errors).
Authentication: JWT-based, with roles (admin/user).